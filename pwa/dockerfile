# To prevent invalidating the cache on Package.json version updates, use this dependency file
FROM node:16.14.0-alpine AS deps

# Install the JQ package
RUN apk add jq

# Copy over the package.json which will always invalidate cache
COPY package.json /tmp
RUN jq ' { dependencies, devDependencies, scripts }' < /tmp/package.json > /tmp/deps.json

# Build stage, use this to build your app into Javascript files.
FROM node:16.14.0 as build-stage
WORKDIR /pwa
COPY ["package-lock.json*", "./"]

# As this file hasn't been changed, the cache isn't invalidated
COPY --from=deps /tmp/deps.json ./package.json

# Running `npm ci` makes sure we are not upgrading the packages because they are already in the `package-lock` file.
# This is often used if you just want to install the packages without upgrading them.
RUN npm ci
COPY ["tsconfig.json", "tsconfig.node.json", "index.html", "vite.config.ts", "./"]
COPY ./src /pwa/src
RUN npm run build

FROM nginx:stable-alpine AS nginx
COPY --from=build-stage /pwa/dist /usr/share/nginx/html/
EXPOSE 80
CMD ["nginx", "-g", "daemon off;" ]
